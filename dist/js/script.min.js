function debug(a) {
    console.log(a);
}

function BaseRelation(a) {
    this.name = a;
}

function getAttrsFromTable(a) {
    for (var b = a.getElementsByTagName("th"), c = new Array(b.length), d = 0; d < b.length; d++) c[d] = b[d].innerHTML;
    return c;
}

function rowToTuple(a, b) {
    for (var c = {}, d = a.getElementsByTagName("td"), e = 0; e < b.length; e++) c[b[e]] = d[e].innerHTML;
    return c;
}

function getTuples(a, b) {
    for (var c = a.getElementsByTagName("tbody")[0].getElementsByTagName("tr"), d = new Array(c.length), e = 0; e < c.length; e++) d[e] = rowToTuple(c[e], b);
    return d;
}

function findTable(a) {
    for (var b = document.getElementsByClassName("relation"), c = 0; c < b.length; c++) {
        var d = b[c].getElementsByTagName("caption")[0];
        if (0 === d.innerText.indexOf(a)) return b[c];
    }
    throw "No such relation defined";
}

function Cross(a, b) {
    this.left = a, this.right = b;
}

function NaturalJoin(a, b) {
    this.left = a, this.right = b;
}

function getJoinAttrs(a, b) {
    joinAttrs = [];
    for (var c = 0; c < a.length; c++) -1 != b.indexOf(a[c]) && joinAttrs.push(a[c]);
    return joinAttrs;
}

function Projection(a, b) {
    this.attrs = a, this.relation = b;
}

function Selection(a, b) {
    this.predicate = a, this.relation = b;
}

function BaseRelation(a) {
    this.name = a;
}

function Selection(a, b) {
    this.predicate = a, this.relation = b;
}

function Projection(a, b) {
    this.attrs = a, this.relation = b;
}

function Renaming(a, b) {
    this.renaming = a, this.relation = b;
}

function Cross(a, b) {
    this.left = a, this.right = b;
}

function NaturalJoin(a, b) {
    this.left = a, this.right = b;
}

function ThetaJoin(a, b, c) {
    this.left = a, this.right = b, this.pred = c;
}

function applyProjection(a, b, c) {
    for (var d = getAttrsFromTable(a), e = getTuples(a, d), f = new Array(e.length), g = 0; g < e.length; g++) f[g] = project(e[g], c);
    fillTableWithTuples(b, f, c);
}

function makeTablesExpendable() {
    var a = document.getElementsByClassName("expendable"), b = document.createElement("span");
    b.classList.add("toggle"), b.innerHTML = "▼", b.style.cursor = "s-resize";
    for (var c = 0; c < a.length; c++) {
        hideTable(a[c]);
        var d = a[c].getElementsByTagName("caption")[0], e = b.cloneNode(!0);
        d.appendChild(e), e.onclick = toggleTable, foo = e;
    }
}

function toggleTable() {
    var a = this.parentElement.parentElement, b = a.getElementsByTagName("tbody")[0];
    "none" == b.style.display ? (showTable(a), a.getElementsByClassName("toggle")[0].innerHTML = "▲", 
    a.getElementsByClassName("toggle")[0].style.cursor = "n-resize") : (hideTable(a), 
    a.getElementsByClassName("toggle")[0].innerHTML = "▼", a.getElementsByClassName("toggle")[0].style.cursor = "s-resize");
}

function hideTable(a) {
    var b = a.getElementsByTagName("tbody")[0];
    b.style.display = "none";
}

function showTable(a) {
    var b = a.getElementsByTagName("tbody")[0];
    b.style.display = "";
}

function execQuery() {
    var a = document.getElementById("input").value;
    debug("Onload function called for query: " + a), document.getElementById("error_output").innerHTML = "";
    var b = document.getElementById("result_output").getElementsByTagName("table");
    b.length > 0 && b[0].remove();
    try {
        result = QueryParser.parse(a);
    } catch (c) {
        document.getElementById("error_output").innerHTML = c;
    }
    result.eval();
    var d = result.result, e = result.attrs, f = build_table(d, e);
    document.getElementById("result_output").appendChild(f);
}

function renameAttr(a, b, c) {
    return a[c] && (a[b] = a[c], delete a[c]), a;
}

function applyRename(a, b, c) {
    var d = getAttrsFromTable(a), e = getTuples(a, d), f = new Array(e.length), g = c.match(/(\w+)\s*(<-)\s*(\w+)/);
    if (null == g) for (var h = 0; h < e.length; h++) f[h] = e[h]; else {
        debug(g), debug(d);
        for (var h = 0; h < e.length; h++) f[h] = renameAttr(e[h], g[1], g[3]);
        idx = d.indexOf(g[3]), debug(idx), d[idx] = g[1];
    }
    fillTableWithTuples(b, f, d);
}

function applySelection(a, b, c) {
    for (var d = getAttrsFromTable(a), e = getTuples(a, d), f = [], g = 0; g < e.length; g++) c(e[g]) && f.push(e[g]);
    fillTableWithTuples(b, f, d);
}

function build_table(a, b) {
    var c = document.createElement("table");
    c.classList.add("relation");
    var d = document.createElement("caption");
    d.innerHTML = "RESULT", c.appendChild(d), fillTableHeader(c, b);
    var e = document.createElement("tbody");
    c.appendChild(e);
    for (var f = 0; f < a.length; f++) {
        var g = createRow(a[f], b);
        e.appendChild(g);
    }
    return c;
}

function fillTableHeader(a, b) {
    var c = document.createElement("thead"), d = document.createElement("tr");
    c.appendChild(d);
    for (var e = 0; e < b.length; e++) {
        var f = document.createElement("th");
        f.innerHTML = b[e], d.appendChild(f);
    }
    a.appendChild(c);
}

function createRow(a, b) {
    for (var c = document.createElement("tr"), d = 0; d < b.length; d++) {
        var e = document.createElement("td");
        e.innerHTML = a[b[d]], c.appendChild(e);
    }
    return c;
}

BaseRelation.prototype.eval = function() {
    var a = findTable(this.name);
    this.attrs = getAttrsFromTable(a), this.result = getTuples(a, this.attrs), debug("BaseRelation '" + this.name + "' eval()ed.");
}, Cross.prototype.eval = function() {
    this.left.eval(), this.right.eval();
    var a = this.left.result, b = this.right.result;
    this.attrs = this.left.attrs.concat(this.right.attrs), this.result = new Array();
    for (var c = 0; c < a.length; c++) for (var d = 0; d < b.length; d++) {
        var e = a[c], f = b[d], g = {};
        for (var h in e) g[h] = e[h];
        for (var h in f) g[h] = f[h];
        console.log(g), this.result.push(g);
    }
    console.log(this.result);
}, NaturalJoin.prototype.eval = function() {
    this.left.eval(), this.right.eval();
    var a = this.left.result, b = this.right.result;
    this.join_attrs = getJoinAttrs(this.left.attrs, this.right.attrs), this.result = new Array(), 
    this.attrs = new Array();
    for (var c = 0; c < this.left.attrs.length; c++) {
        var d = this.left.attrs[c];
        -1 == this.join_attrs.indexOf(d) && this.attrs.push(this.left.attrs[c]);
    }
    for (var c = 0; c < this.join_attrs.length; c++) this.attrs.push(this.join_attrs[c]);
    for (var c = 0; c < this.right.attrs.length; c++) {
        var d = this.right.attrs[c];
        -1 == this.join_attrs.indexOf(d) && this.attrs.push(this.right.attrs[c]);
    }
    for (var c = 0; c < a.length; c++) for (var e = 0; e < b.length; e++) {
        for (var f = a[c], g = b[e], h = !0, i = 0; i < this.join_attrs.length; i++) h = h && f[this.join_attrs[i]] == g[this.join_attrs[i]];
        if (h) {
            var j = {};
            for (var d in f) j[d] = f[d];
            for (var d in g) -1 == this.join_attrs.indexOf(d) && (j[d] = g[d]);
            this.result.push(j);
        }
    }
}, Projection.prototype.eval = function() {
    this.relation.eval();
    var a = this.relation.result;
    this.result = new Array();
    for (var b = 0; b < a.length; b++) {
        var c = this.project(a[b]);
        this.result.pushDistinct(c);
    }
    this.result;
}, Projection.prototype.project = function(a) {
    for (var b in a) -1 == this.attrs.indexOf(b) && delete a[b];
    return a;
}, Array.prototype.pushDistinct = function(a) {
    for (var b = 0; b < this.length; b++) {
        var c = !0;
        for (k in this[b]) c = c && this[b][k] == a[k];
        if (c) return this.length;
    }
    this.push(a);
}, Selection.prototype.eval = function() {
    this.relation.eval();
    var a = this.relation.result;
    console.log(this), this.attrs = this.relation.attrs, this.result = new Array();
    for (var b = 0; b < a.length; b++) this.predicate(a[b]) && this.result.push(a[b]);
}, QueryParser = function() {
    function a(a, b) {
        function c() {
            this.constructor = a;
        }
        c.prototype = b.prototype, a.prototype = new c();
    }
    function b(a, b, c, d, e, f) {
        this.message = a, this.expected = b, this.found = c, this.offset = d, this.line = e, 
        this.column = f, this.name = "SyntaxError";
    }
    function c(a) {
        function c(b) {
            function c(b, c, d) {
                var e, f;
                for (e = c; d > e; e++) f = a.charAt(e), "\n" === f ? (b.seenCR || b.line++, b.column = 1, 
                b.seenCR = !1) : "\r" === f || "\u2028" === f || "\u2029" === f ? (b.line++, b.column = 1, 
                b.seenCR = !0) : (b.column++, b.seenCR = !1);
            }
            return Lb !== b && (Lb > b && (Lb = 0, Mb = {
                line: 1,
                column: 1,
                seenCR: !1
            }), c(Mb, Lb, b), Lb = b), Mb;
        }
        function d(a) {
            Nb > Jb || (Jb > Nb && (Nb = Jb, Ob = []), Ob.push(a));
        }
        function e(d, e, f) {
            function g(a) {
                var b = 1;
                for (a.sort(function(a, b) {
                    return a.description < b.description ? -1 : a.description > b.description ? 1 : 0;
                }); b < a.length; ) a[b - 1] === a[b] ? a.splice(b, 1) : b++;
            }
            function h(a, b) {
                function c(a) {
                    function b(a) {
                        return a.charCodeAt(0).toString(16).toUpperCase();
                    }
                    return a.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\x08/g, "\\b").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\f/g, "\\f").replace(/\r/g, "\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(a) {
                        return "\\x0" + b(a);
                    }).replace(/[\x10-\x1F\x80-\xFF]/g, function(a) {
                        return "\\x" + b(a);
                    }).replace(/[\u0180-\u0FFF]/g, function(a) {
                        return "\\u0" + b(a);
                    }).replace(/[\u1080-\uFFFF]/g, function(a) {
                        return "\\u" + b(a);
                    });
                }
                var d, e, f, g = new Array(a.length);
                for (f = 0; f < a.length; f++) g[f] = a[f].description;
                return d = a.length > 1 ? g.slice(0, -1).join(", ") + " or " + g[a.length - 1] : g[0], 
                e = b ? '"' + c(b) + '"' : "end of input", "Expected " + d + " but " + e + " found.";
            }
            var i = c(f), j = f < a.length ? a.charAt(f) : null;
            return null !== e && g(e), new b(null !== d ? d : h(e, j), e, j, f, i.line, i.column);
        }
        function f() {
            var a;
            return a = g();
        }
        function g() {
            var a;
            return a = h(), a === x && (a = l(), a === x && (a = p(), a === x && (a = r(), a === x && (a = t(), 
            a === x && (a = u()))))), a;
        }
        function h() {
            var a, b;
            return a = Jb, b = i(), b !== x && (Kb = a, b = A(b)), a = b;
        }
        function i() {
            var b, c, e;
            if (b = Jb, c = [], C.test(a.charAt(Jb)) ? (e = a.charAt(Jb), Jb++) : (e = x, 0 === Pb && d(D)), 
            e !== x) for (;e !== x; ) c.push(e), C.test(a.charAt(Jb)) ? (e = a.charAt(Jb), Jb++) : (e = x, 
            0 === Pb && d(D)); else c = B;
            return c !== x && (Kb = b, c = E(c)), b = c;
        }
        function j() {
            var b, c, e, f, g;
            if (b = Jb, c = i(), c !== x) if (46 === a.charCodeAt(Jb) ? (e = F, Jb++) : (e = x, 
            0 === Pb && d(G)), e !== x) {
                if (f = [], C.test(a.charAt(Jb)) ? (g = a.charAt(Jb), Jb++) : (g = x, 0 === Pb && d(D)), 
                g !== x) for (;g !== x; ) f.push(g), C.test(a.charAt(Jb)) ? (g = a.charAt(Jb), Jb++) : (g = x, 
                0 === Pb && d(D)); else f = B;
                f !== x ? (Kb = b, c = H(c, f), b = c) : (Jb = b, b = B);
            } else Jb = b, b = B; else Jb = b, b = B;
            if (b === x) {
                if (b = Jb, c = [], C.test(a.charAt(Jb)) ? (e = a.charAt(Jb), Jb++) : (e = x, 0 === Pb && d(D)), 
                e !== x) for (;e !== x; ) c.push(e), C.test(a.charAt(Jb)) ? (e = a.charAt(Jb), Jb++) : (e = x, 
                0 === Pb && d(D)); else c = B;
                c !== x && (Kb = b, c = E(c)), b = c;
            }
            return b;
        }
        function k() {
            var b;
            return I.test(a.charAt(Jb)) ? (b = a.charAt(Jb), Jb++) : (b = x, 0 === Pb && d(J)), 
            b;
        }
        function l() {
            var b, c, e, f, h, i;
            return b = Jb, a.substr(Jb, 7) === K ? (c = K, Jb += 7) : (c = x, 0 === Pb && d(L)), 
            c !== x ? (e = m(), e !== x ? (a.substr(Jb, 2) === M ? (f = M, Jb += 2) : (f = x, 
            0 === Pb && d(N)), f !== x ? (h = g(), h !== x ? (41 === a.charCodeAt(Jb) ? (i = O, 
            Jb++) : (i = x, 0 === Pb && d(P)), i !== x ? (Kb = b, c = Q(e, h), b = c) : (Jb = b, 
            b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)) : (Jb = b, b = B), 
            b;
        }
        function m() {
            var a, b, c, d, e, f;
            if (a = Jb, b = o(), b !== x) {
                for (c = [], d = k(); d !== x; ) c.push(d), d = k();
                if (c !== x) if (d = n(), d !== x) {
                    for (e = [], f = k(); f !== x; ) e.push(f), f = k();
                    e !== x ? (f = o(), f !== x ? (Kb = a, b = R(b, d, f), a = b) : (Jb = a, a = B)) : (Jb = a, 
                    a = B);
                } else Jb = a, a = B; else Jb = a, a = B;
            } else Jb = a, a = B;
            return a;
        }
        function n() {
            var b;
            return a.substr(Jb, 2) === S ? (b = S, Jb += 2) : (b = x, 0 === Pb && d(T)), b === x && (a.substr(Jb, 2) === U ? (b = U, 
            Jb += 2) : (b = x, 0 === Pb && d(V)), b === x && (a.substr(Jb, 2) === W ? (b = W, 
            Jb += 2) : (b = x, 0 === Pb && d(X)), b === x && (a.substr(Jb, 2) === Y ? (b = Y, 
            Jb += 2) : (b = x, 0 === Pb && d(Z)), b === x && (60 === a.charCodeAt(Jb) ? (b = $, 
            Jb++) : (b = x, 0 === Pb && d(_)), b === x && (62 === a.charCodeAt(Jb) ? (b = ab, 
            Jb++) : (b = x, 0 === Pb && d(bb))))))), b;
        }
        function o() {
            var b, c, e, f;
            if (b = Jb, c = j(), c !== x && (Kb = b, c = cb(c)), b = c, b === x) {
                if (b = Jb, 34 === a.charCodeAt(Jb) ? (c = db, Jb++) : (c = x, 0 === Pb && d(eb)), 
                c !== x) {
                    if (e = [], fb.test(a.charAt(Jb)) ? (f = a.charAt(Jb), Jb++) : (f = x, 0 === Pb && d(gb)), 
                    f !== x) for (;f !== x; ) e.push(f), fb.test(a.charAt(Jb)) ? (f = a.charAt(Jb), 
                    Jb++) : (f = x, 0 === Pb && d(gb)); else e = B;
                    e !== x ? (34 === a.charCodeAt(Jb) ? (f = db, Jb++) : (f = x, 0 === Pb && d(eb)), 
                    f !== x ? (Kb = b, c = hb(e), b = c) : (Jb = b, b = B)) : (Jb = b, b = B);
                } else Jb = b, b = B;
                if (b === x) {
                    if (b = Jb, c = [], ib.test(a.charAt(Jb)) ? (e = a.charAt(Jb), Jb++) : (e = x, 0 === Pb && d(jb)), 
                    e !== x) for (;e !== x; ) c.push(e), ib.test(a.charAt(Jb)) ? (e = a.charAt(Jb), 
                    Jb++) : (e = x, 0 === Pb && d(jb)); else c = B;
                    c !== x && (Kb = b, c = kb(c)), b = c;
                }
            }
            return b;
        }
        function p() {
            var b, c, e, f, h, i;
            return b = Jb, a.substr(Jb, 4) === lb ? (c = lb, Jb += 4) : (c = x, 0 === Pb && d(mb)), 
            c !== x ? (e = q(), e !== x ? (a.substr(Jb, 2) === M ? (f = M, Jb += 2) : (f = x, 
            0 === Pb && d(N)), f !== x ? (h = g(), h !== x ? (41 === a.charCodeAt(Jb) ? (i = O, 
            Jb++) : (i = x, 0 === Pb && d(P)), i !== x ? (Kb = b, c = nb(e, h), b = c) : (Jb = b, 
            b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)) : (Jb = b, b = B), 
            b;
        }
        function q() {
            var b, c, e, f, g, h;
            if (b = Jb, c = j(), c !== x) {
                for (e = [], f = k(); f !== x; ) e.push(f), f = k();
                if (e !== x) if (44 === a.charCodeAt(Jb) ? (f = ob, Jb++) : (f = x, 0 === Pb && d(pb)), 
                f !== x) {
                    for (g = [], h = k(); h !== x; ) g.push(h), h = k();
                    g !== x ? (h = q(), h !== x ? (Kb = b, c = qb(c, h), b = c) : (Jb = b, b = B)) : (Jb = b, 
                    b = B);
                } else Jb = b, b = B; else Jb = b, b = B;
            } else Jb = b, b = B;
            return b === x && (b = Jb, c = j(), c !== x && (Kb = b, c = rb(c)), b = c), b;
        }
        function r() {
            var b, c, e, f, h, i;
            return b = Jb, a.substr(Jb, 5) === sb ? (c = sb, Jb += 5) : (c = x, 0 === Pb && d(tb)), 
            c !== x ? (e = s(), e !== x ? (a.substr(Jb, 2) === M ? (f = M, Jb += 2) : (f = x, 
            0 === Pb && d(N)), f !== x ? (h = g(), h !== x ? (41 === a.charCodeAt(Jb) ? (i = O, 
            Jb++) : (i = x, 0 === Pb && d(P)), i !== x ? (Kb = b, c = ub(e, h), b = c) : (Jb = b, 
            b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)) : (Jb = b, b = B), 
            b;
        }
        function s() {
            var b, c, e, f;
            if (b = Jb, c = [], C.test(a.charAt(Jb)) ? (e = a.charAt(Jb), Jb++) : (e = x, 0 === Pb && d(D)), 
            e !== x) for (;e !== x; ) c.push(e), C.test(a.charAt(Jb)) ? (e = a.charAt(Jb), Jb++) : (e = x, 
            0 === Pb && d(D)); else c = B;
            return c !== x ? (a.substr(Jb, 2) === vb ? (e = vb, Jb += 2) : (e = x, 0 === Pb && d(wb)), 
            e !== x ? (f = j(), f !== x ? (Kb = b, c = xb(c, f), b = c) : (Jb = b, b = B)) : (Jb = b, 
            b = B)) : (Jb = b, b = B), b === x && (b = i()), b;
        }
        function t() {
            var b, c, e, f, h, i;
            return b = Jb, 40 === a.charCodeAt(Jb) ? (c = yb, Jb++) : (c = x, 0 === Pb && d(zb)), 
            c !== x ? (e = g(), e !== x ? (a.substr(Jb, 8) === Ab ? (f = Ab, Jb += 8) : (f = x, 
            0 === Pb && d(Bb)), f !== x ? (h = g(), h !== x ? (41 === a.charCodeAt(Jb) ? (i = O, 
            Jb++) : (i = x, 0 === Pb && d(P)), i !== x ? (Kb = b, c = Cb(e, h), b = c) : (Jb = b, 
            b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)) : (Jb = b, b = B), 
            b;
        }
        function u() {
            var b, c, e, f, h, i, j, k;
            return b = Jb, 40 === a.charCodeAt(Jb) ? (c = yb, Jb++) : (c = x, 0 === Pb && d(zb)), 
            c !== x ? (e = g(), e !== x ? (a.substr(Jb, 7) === Db ? (f = Db, Jb += 7) : (f = x, 
            0 === Pb && d(Eb)), f !== x ? (h = m(), h !== x ? (a.substr(Jb, 2) === M ? (i = M, 
            Jb += 2) : (i = x, 0 === Pb && d(N)), i !== x ? (j = g(), j !== x ? (41 === a.charCodeAt(Jb) ? (k = O, 
            Jb++) : (k = x, 0 === Pb && d(P)), k !== x ? (Kb = b, c = Fb(e, h, j), b = c) : (Jb = b, 
            b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)) : (Jb = b, 
            b = B)) : (Jb = b, b = B), b === x && (b = Jb, 40 === a.charCodeAt(Jb) ? (c = yb, 
            Jb++) : (c = x, 0 === Pb && d(zb)), c !== x ? (e = g(), e !== x ? (a.substr(Jb, 7) === Gb ? (f = Gb, 
            Jb += 7) : (f = x, 0 === Pb && d(Hb)), f !== x ? (h = g(), h !== x ? (41 === a.charCodeAt(Jb) ? (i = O, 
            Jb++) : (i = x, 0 === Pb && d(P)), i !== x ? (Kb = b, c = Ib(e, h), b = c) : (Jb = b, 
            b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)) : (Jb = b, b = B)), 
            b;
        }
        var v, w = arguments.length > 1 ? arguments[1] : {}, x = {}, y = {
            start: f
        }, z = f, A = function(a) {
            return new BaseRelation(a);
        }, B = x, C = /^[a-zA-Z]/, D = {
            type: "class",
            value: "[a-zA-Z]",
            description: "[a-zA-Z]"
        }, E = function(a) {
            return a.join("");
        }, F = ".", G = {
            type: "literal",
            value: ".",
            description: '"."'
        }, H = function(a, b) {
            return a + "." + b.join("");
        }, I = /^[ \t\r\n]/, J = {
            type: "class",
            value: "[ \\t\\r\\n]",
            description: "[ \\t\\r\\n]"
        }, K = "\\sigma[", L = {
            type: "literal",
            value: "\\sigma[",
            description: '"\\\\sigma["'
        }, M = "](", N = {
            type: "literal",
            value: "](",
            description: '"]("'
        }, O = ")", P = {
            type: "literal",
            value: ")",
            description: '")"'
        }, Q = function(a, b) {
            return new Selection(a, b);
        }, R = function(a, b, c) {
            return Function("tuple", "return " + a + b + c);
        }, S = "==", T = {
            type: "literal",
            value: "==",
            description: '"=="'
        }, U = "!=", V = {
            type: "literal",
            value: "!=",
            description: '"!="'
        }, W = "<=", X = {
            type: "literal",
            value: "<=",
            description: '"<="'
        }, Y = ">=", Z = {
            type: "literal",
            value: ">=",
            description: '">="'
        }, $ = "<", _ = {
            type: "literal",
            value: "<",
            description: '"<"'
        }, ab = ">", bb = {
            type: "literal",
            value: ">",
            description: '">"'
        }, cb = function(a) {
            return "tuple['" + a + "']";
        }, db = '"', eb = {
            type: "literal",
            value: '"',
            description: '"\\""'
        }, fb = /^[^"]/, gb = {
            type: "class",
            value: '[^"]',
            description: '[^"]'
        }, hb = function(a) {
            return '"' + a.join("") + '"';
        }, ib = /^[0-9]/, jb = {
            type: "class",
            value: "[0-9]",
            description: "[0-9]"
        }, kb = function(a) {
            return parseInt(a.join(""), 10);
        }, lb = "\\pi[", mb = {
            type: "literal",
            value: "\\pi[",
            description: '"\\\\pi["'
        }, nb = function(a, b) {
            return new Projection(a, b);
        }, ob = ",", pb = {
            type: "literal",
            value: ",",
            description: '","'
        }, qb = function(a, b) {
            return [ a ].concat(b);
        }, rb = function(a) {
            return [ a ];
        }, sb = "\\rho[", tb = {
            type: "literal",
            value: "\\rho[",
            description: '"\\\\rho["'
        }, ub = function(a, b) {
            return new Renaming(a, b);
        }, vb = "<-", wb = {
            type: "literal",
            value: "<-",
            description: '"<-"'
        }, xb = function(a, b) {
            return a.join("") + "<-" + b;
        }, yb = "(", zb = {
            type: "literal",
            value: "(",
            description: '"("'
        }, Ab = ")\\times(", Bb = {
            type: "literal",
            value: ")\\times(",
            description: '")\\\\times("'
        }, Cb = function(a, b) {
            return new Cross(a, b);
        }, Db = ")\\join[", Eb = {
            type: "literal",
            value: ")\\join[",
            description: '")\\\\join["'
        }, Fb = function(a, b, c) {
            return new ThetaJoin(a, c, b);
        }, Gb = ")\\join(", Hb = {
            type: "literal",
            value: ")\\join(",
            description: '")\\\\join("'
        }, Ib = function(a, b) {
            return new NaturalJoin(a, b);
        }, Jb = 0, Kb = 0, Lb = 0, Mb = {
            line: 1,
            column: 1,
            seenCR: !1
        }, Nb = 0, Ob = [], Pb = 0;
        if ("startRule" in w) {
            if (!(w.startRule in y)) throw new Error("Can't start parsing from rule \"" + w.startRule + '".');
            z = y[w.startRule];
        }
        if (v = z(), v !== x && Jb === a.length) return v;
        throw v !== x && Jb < a.length && d({
            type: "end",
            description: "end of input"
        }), e(null, Ob, Nb);
    }
    return a(b, Error), {
        SyntaxError: b,
        parse: c
    };
}(), window.onload = function() {
    makeTablesExpendable(), document.getElementById("computeitlikeabauss").onclick = execQuery, 
    document.getElementById("input").onkeypress = function(a) {
        a || (a = window.event);
        var b = a.keyCode || a.which;
        "13" == b && execQuery();
    };
};